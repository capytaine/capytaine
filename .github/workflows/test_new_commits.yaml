name: Build and test in fixed environments

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      # Do not run if only the documentation has been changed
      - 'docs/**'
      - '**/*.md'
  pull_request:
    paths-ignore:
      # Do not run if only the documentation has been changed
      - 'docs/**'
      - '**/*.md'

env:
  FORCE_COLOR: 3

# The following block is meant to cancel the workflow if a newer commit is pushed on the pull request
# From https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  "build_and_test":

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['38', '312']

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    # - name: Set up Just
    #   uses: extractions/setup-just@v3
    #   with:
    #       just-version: 1.40
    - name: Set up Just
      run: sudo apt install -y just

    - name: Set up UV
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Run tests
      run: just test_in_py${{ matrix.python-version }}_reference_env

  "compile_fortran":

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    # # 2024-10-22: disabling this step because it takes a few minutes to
    # download a specific version of GCC, but it is not really required as GCC
    # is already installed on the Ubuntu runner.
    #
    # - name: Set up Fortran
    #   uses: fortran-lang/setup-fortran@v1
    #   with:
    #     compiler: 'gcc'
    #     version: '13'

    - name: Compile and run example
      working-directory: capytaine/green_functions/libDelhommeau/
      run: make example && examples/minimal/minimal_example.bin
      # Soundness of the results is not tested, only that the compiling and
      # execution are succeeding.

    - name: Run simple benchmark
      working-directory: capytaine/green_functions/libDelhommeau/
      run: make run_bench_rankine && make run_bench_waves
