[project]
name = "capytaine"
description = "Python BEM solver for linear potential flow, based on Nemoh"
authors = [{name = "Matthieu Ancellin", email = "matthieu.ancellin@mews-labs.com"}]
requires-python = ">=3.8"
dependencies = [
   "numpy>=1.20; python_version>='3.9'",
   "numpy>=1.24; python_version=='3.8'",  # https://github.com/capytaine/capytaine/issues/562
   "scipy",
   "pandas>=1.3,<3",
   "xarray",
   "rich"
]
urls = {homepage = "https://capytaine.org", repository = "https://github.com/capytaine/capytaine"}
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Fortran",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Topic :: Scientific/Engineering",
]
scripts = {capytaine = "capytaine.ui.cli:main"}

dynamic = ['version']

[project.optional-dependencies]
optional = [
  "matplotlib", "joblib>=1.3", "meshio", "netcdf4", "vtk",
]

[dependency-groups]
test = ["pytest", "capytaine[optional]"]
more_optional = [
  "bemio @ https://github.com/mancellin/bemio/archive/56559c838e0636916669994712473ad7438d23be.zip",
  # This optional dependency cannot be with the other because PyPI only accepts
  # optional dependencies that are on PyPI.
  "pygmsh", "gmsh",
  # These dependencies are causing issues in CI.
  ]
docs = ["sphinx", "sphinx-toolbox", "sphinxcontrib-proof", "sphinxcontrib-mermaid", "capytaine[optional]"]
dev =  [{include-group = "docs"}, {include-group = "test"}, {include-group = "more_optional"}]
editable_install = [
  "meson-python",
  "ninja",  # Unlike [build-system.requires], ninja need to be explicitly installed for editable install.
  "charset-normalizer",
  "numpy!=1.26.4,!=1.26.3"
]
# `editable_install` is similar to [build-system.requires], but not exactly as
# it is used to create environment for the editable install. For the editable
# install, the build-time and runtime numpy version will be the same, so the
# constraints are slightly different than in [build-system.requires].

[build-system]
build-backend = 'mesonpy'
requires = [
    "meson-python",
    "charset-normalizer",
    "numpy>=2.0.0; python_version>='3.9'",
    "numpy==1.24.4; python_version=='3.8'",
]

[tool.cibuildwheel]
test-requires = ["pytest"]
test-command = "pytest {project}/pytest/"

[tool.ruff.lint]
select = ["E", "F", "W", "NPY"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.pytest.ini_options]
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
log_cli_level = "info"
testpaths = ["pytest/"]
